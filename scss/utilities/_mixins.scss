// ==========================================================================
// Mixins
// ==========================================================================

// BEM selectors


// Media queries
@mixin mq($break) {
  @if $break == 's' {
    @media (min-width: $breakpoint-small) {
      @content;
    }
  }
  @else if $break == 'm' {
    @media (min-width: $breakpoint-medium) {
      @content;
    }
  }
  @else if $break == 'l' {
    @media (min-width: $breakpoint-large) {
      @content;
    }
  }
  @else if $break == 'xl' {
    @media (min-width: $breakpoint-extra-large) {
      @content;
    }
  }
  @else {
    @error "Break-point #{$break} does not exist, check spelling and remember format is like: 's' or 'xl'.";
  }
}

// Add Colours & make dark
@mixin dark-colour($property, $palette, $catagory, $shade: base) {
  #{$property}: palette($palette, $catagory, $shade, base);
  &:hover, &:active {
    #{$property}: palette($palette, $catagory, $shade, dark);
  }
}

// Arrow and label styling
@mixin arrows-styling($arrow-direction) {
  font-weight: $font-w-bold;
  font-size: 1.2rem;
  .icon-keyboard_arrow_#{$arrow-direction} {
    font-size: 3rem;
  }
  &:hover {
    border: none;
  }
}

// Light & Dark Mode colouring
@mixin ldmode-colours($mod) {
  @if ($mod == 'light' or $mod == 'dark') {
    $modmode: str-insert('mode', $mod, 0);

    & {
      --colour-base: #{palette($modmode,palette,base)};
      --colour-secondary: #{palette($modmode,palette,secondary)};
      --colour-tertiary: #{palette($modmode,palette,tertiary)};
      --colour-accent: #{palette($modmode,palette,accent)};
      --colour-text-base: #{palette($modmode,text,base)};
      --colour-text-placeholder:  #{palette($modmode,text,placeholder)};
      --colour-text-dark: #{palette($modmode,text,dark)};
      --colour-text-shadow: #{palette($modmode,text,shadow)};
      --colour-filter-brightness: #{palette($modmode,filter,brightness)};
      --colour-status-success: #{palette($modmode, status, success)};
      --colour-status-error: #{palette($modmode, status, error)};
    }

  } @else {
    @error "Light & Dark mode function has been passed in incorrectly. The only allowed arguments are 'light' or 'dark'."
  }
}