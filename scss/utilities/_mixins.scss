// ==========================================================================
// Mixins
// ==========================================================================

// BEM selectors


// Media queries
@mixin mq($break) {
  @if $break == 's' {
    @media (min-width: $breakpoint-small) {
      @content;
    }
  }
  @else if $break == 'm' {
    @media (min-width: $breakpoint-medium) {
      @content;
    }
  }
  @else if $break == 'l' {
    @media (min-width: $breakpoint-large) {
      @content;
    }
  }
  @else if $break == 'xl' {
    @media (min-width: $breakpoint-extra-large) {
      @content;
    }
  }
  @else {
    @error "Break-point #{$break} does not exist, check spelling and remember format is like: 's' or 'xl'.";
  }
}

// Add Colours & make dark
@mixin dark-colour($property, $palette, $catagory, $shade: base) {
  #{$property}: palette($palette, $catagory, $shade, base);
  &:hover, &:active {
    #{$property}: palette($palette, $catagory, $shade, dark);
  }
}

// Arrow and label styling
@mixin arrows-styling($arrow-direction) {
  font-weight: $font-w-bold;
  font-size: 1.2rem;
  .icon-keyboard_arrow_#{$arrow-direction} {
    font-size: 3rem;
  }
  &:hover {
    border: none;
  }
}

// Generate modifier color classes


// Generating :before or :after pseudo-element shapes


// Image replacement

      
// Adjacent sibling margins


// Grid Columns
     
       